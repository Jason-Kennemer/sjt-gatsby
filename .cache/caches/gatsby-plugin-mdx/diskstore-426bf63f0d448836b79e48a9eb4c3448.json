{"expireTime":9007200845098838000,"key":"gatsby-plugin-mdx-entire-payload-5c0e73cb0c91bea14648e14fd6689053-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Hi from MDX-landia","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":21,"offset":20},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":21,"offset":20},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Click the diagram to regenerate the colors.","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":44,"offset":66},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":44,"offset":66},"indent":[]}},{"type":"export","value":"export const RandomColors = ({ count = 1000 }) => {\n  const [els, setEls] = React.useState([])\n  const randomHexColor = () => {\n    return '#' + ('000000' + Math.floor(Math.random()*16777215).toString(16)).slice(-6)\n  }\n  const regenEls = () => {\n    const newEls = []\n    for (let i = 0; i < count; i++) {\n      newEls.push(<div style={{ height: 16, width: 16, backgroundColor: randomHexColor() }} />)\n    }\n    setEls(newEls)\n  }\n  React.useEffect(() => regenEls(), [])\n  return (\n    <div\n      onClick={regenEls}\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        cursor: 'pointer'\n      }}\n    >\n      {els}\n    </div>\n  )\n}","position":{"start":{"line":6,"column":1,"offset":68},"end":{"line":31,"column":2,"offset":720},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<RandomColors />","position":{"start":{"line":33,"column":1,"offset":722},"end":{"line":33,"column":17,"offset":738},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"yeah!","position":{"start":{"line":35,"column":1,"offset":740},"end":{"line":35,"column":6,"offset":745},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":740},"end":{"line":35,"column":6,"offset":745},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The color component is taken from the ","position":{"start":{"line":37,"column":1,"offset":747},"end":{"line":37,"column":39,"offset":785},"indent":[]}},{"type":"link","title":null,"url":"https://johno.com/randomness-and-color/","children":[{"type":"text","value":"blog post of MDX creator John\nOtander","position":{"start":{"line":37,"column":40,"offset":786},"end":{"line":38,"column":8,"offset":823},"indent":[1]}}],"position":{"start":{"line":37,"column":39,"offset":785},"end":{"line":38,"column":50,"offset":865},"indent":[1]}},{"type":"text","value":" exploring randomness and\ncolor.","position":{"start":{"line":38,"column":50,"offset":865},"end":{"line":39,"column":7,"offset":897},"indent":[1]}}],"position":{"start":{"line":37,"column":1,"offset":747},"end":{"line":39,"column":7,"offset":897},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":42,"column":1,"offset":900},"end":{"line":42,"column":31,"offset":930},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":42,"column":31,"offset":930}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const RandomColors = ({\n  count = 1000\n}) => {\n  const [els, setEls] = React.useState([]);\n\n  const randomHexColor = () => {\n    return '#' + ('000000' + Math.floor(Math.random() * 16777215).toString(16)).slice(-6);\n  };\n\n  const regenEls = () => {\n    const newEls = [];\n\n    for (let i = 0; i < count; i++) {\n      newEls.push(<div style={{\n        height: 16,\n        width: 16,\n        backgroundColor: randomHexColor()\n      }} />);\n    }\n\n    setEls(newEls);\n  };\n\n  React.useEffect(() => regenEls(), []);\n  return <div onClick={regenEls} style={{\n    display: 'flex',\n    flexWrap: 'wrap',\n    cursor: 'pointer'\n  }}>\n      {els}\n    </div>;\n};\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  RandomColors,\n_frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Hi from MDX-landia`}</h1>\n    <p>{`Click the diagram to regenerate the colors.`}</p>\n\n    <RandomColors mdxType=\"RandomColors\" />\n    <p>{`yeah!`}</p>\n    <p>{`The color component is taken from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://johno.com/randomness-and-color/\"\n      }}>{`blog post of MDX creator John\nOtander`}</a>{` exploring randomness and\ncolor.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}